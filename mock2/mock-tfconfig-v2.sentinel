import "strings"

providers = {
	"google": {
		"alias": "",
		"config": {
			"project": {
				"constant_value": "modular-scout-345114",
			},
		},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
	"tls": {
		"alias":               "",
		"config":              {},
		"module_address":      "",
		"name":                "tls",
		"provider_config_key": "tls",
		"version_constraint":  "",
	},
}

resources = {
	"google_privateca_ca_pool.default": {
		"address": "google_privateca_ca_pool.default",
		"config": {
			"issuance_policy": [
				{
					"baseline_values": [
						{
							"ca_options": [
								{
									"is_ca": {
										"constant_value": false,
									},
								},
							],
							"key_usage": [
								{
									"base_key_usage": [
										{
											"digital_signature": {
												"constant_value": true,
											},
											"key_encipherment": {
												"constant_value": true,
											},
										},
									],
									"extended_key_usage": [
										{
											"server_auth": {
												"constant_value": true,
											},
										},
									],
								},
							],
						},
					],
					"identity_constraints": [
						{
							"allow_subject_alt_names_passthrough": {
								"constant_value": true,
							},
							"allow_subject_passthrough": {
								"constant_value": true,
							},
							"cel_expression": [
								{
									"expression": {
										"constant_value": "subject_alt_names.all(san, san.type == DNS || san.type == EMAIL )",
									},
									"title": {
										"constant_value": "My title",
									},
								},
							],
						},
					],
				},
			],
			"labels": {
				"constant_value": {
					"foo": "bar",
				},
			},
			"location": {
				"constant_value": "us-central1",
			},
			"name": {
				"constant_value": "my-ca-pool",
			},
			"project": {
				"constant_value": "modular-scout-345114",
			},
			"publishing_options": [
				{
					"publish_ca_cert": {
						"constant_value": true,
					},
					"publish_crl": {
						"constant_value": true,
					},
				},
			],
			"tier": {
				"constant_value": "ENTERPRISE",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "default",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_privateca_ca_pool",
	},
	"tls_cert_request.example": {
		"address": "tls_cert_request.example",
		"config": {
			"key_algorithm": {
				"constant_value": "RSA",
			},
			"private_key_pem": {
				"references": [
					"tls_private_key.example.private_key_pem",
					"tls_private_key.example",
				],
			},
			"subject": [
				{
					"common_name": {
						"constant_value": "example.com",
					},
					"organization": {
						"constant_value": "ACME Examples, Inc",
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "tls",
		"provisioners":        [],
		"type":                "tls_cert_request",
	},
	"tls_private_key.example": {
		"address": "tls_private_key.example",
		"config": {
			"algorithm": {
				"constant_value": "RSA",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "example",
		"provider_config_key": "tls",
		"provisioners":        [],
		"type":                "tls_private_key",
	},
}

provisioners = {}

variables = {}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
