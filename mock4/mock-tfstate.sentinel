import "strings"
import "types"

outputs = {}

_modules = {
	"root": {
		"data": {
			"google_kms_crypto_key": {
				"cryptokey-1": {
					0: {
						"attr": {
							"destroy_scheduled_duration": "86400s",
							"id":                            "projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1/cryptoKeys/cryptokey-1",
							"import_only":                   false,
							"key_ring":                      "projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1",
							"labels":                        {},
							"name":                          "cryptokey-1",
							"purpose":                       "ENCRYPT_DECRYPT",
							"rotation_period":               "7776000s",
							"skip_initial_version_creation": null,
							"version_template": [
								{
									"algorithm":        "GOOGLE_SYMMETRIC_ENCRYPTION",
									"protection_level": "SOFTWARE",
								},
							],
						},
						"depends_on": [],
						"id":         "projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1/cryptoKeys/cryptokey-1",
						"tainted":    false,
					},
				},
			},
			"google_kms_crypto_key_version": {
				"crypto_key_version": {
					0: {
						"attr": {
							"algorithm":        "GOOGLE_SYMMETRIC_ENCRYPTION",
							"crypto_key":       "projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1/cryptoKeys/cryptokey-1",
							"id":               "//cloudkms.googleapis.com/v1/projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1/cryptoKeys/cryptokey-1/cryptoKeyVersions/1",
							"name":             "projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1/cryptoKeys/cryptokey-1/cryptoKeyVersions/1",
							"protection_level": "SOFTWARE",
							"public_key":       null,
							"state":            "ENABLED",
							"version":          1,
						},
						"depends_on": [],
						"id":         "//cloudkms.googleapis.com/v1/projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1/cryptoKeys/cryptokey-1/cryptoKeyVersions/1",
						"tainted":    false,
					},
				},
			},
			"google_kms_key_ring": {
				"keyring-1": {
					0: {
						"attr": {
							"id":       "projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1",
							"location": "us-central1",
							"name":     "keyring-1",
							"project":  "modular-scout-345114",
						},
						"depends_on": [],
						"id":         "projects/modular-scout-345114/locations/us-central1/keyRings/keyring-1",
						"tainted":    false,
					},
				},
			},
		},
		"path": [],
		"resources": {
			"google_privateca_ca_pool": {
				"default": {
					0: {
						"attr": {
							"id": "projects/modular-scout-345114/locations/us-central1/caPools/my-ca-pool",
							"issuance_policy": [
								{
									"allowed_issuance_modes": [],
									"allowed_key_types":      [],
									"baseline_values": [
										{
											"additional_extensions": [],
											"aia_ocsp_servers":      [],
											"ca_options": [
												{
													"is_ca":                       false,
													"max_issuer_path_length":      0,
													"non_ca":                      false,
													"zero_max_issuer_path_length": false,
												},
											],
											"key_usage": [
												{
													"base_key_usage": [
														{
															"cert_sign":          false,
															"content_commitment": false,
															"crl_sign":           false,
															"data_encipherment":  false,
															"decipher_only":      false,
															"digital_signature":  true,
															"encipher_only":      false,
															"key_agreement":      false,
															"key_encipherment":   true,
														},
													],
													"extended_key_usage": [
														{
															"client_auth":      false,
															"code_signing":     false,
															"email_protection": false,
															"ocsp_signing":     false,
															"server_auth":      true,
															"time_stamping":    false,
														},
													],
													"unknown_extended_key_usages": [],
												},
											],
											"policy_ids": [],
										},
									],
									"identity_constraints": [
										{
											"allow_subject_alt_names_passthrough": true,
											"allow_subject_passthrough":           true,
											"cel_expression": [
												{
													"description": "",
													"expression":  "subject_alt_names.all(san, san.type == DNS || san.type == EMAIL )",
													"location":    "",
													"title":       "My title",
												},
											],
										},
									],
									"maximum_lifetime": "",
								},
							],
							"labels": {
								"foo": "bar",
							},
							"location": "us-central1",
							"name":     "my-ca-pool",
							"project":  "modular-scout-345114",
							"publishing_options": [
								{
									"publish_ca_cert": true,
									"publish_crl":     true,
								},
							],
							"tier":     "ENTERPRISE",
							"timeouts": null,
						},
						"depends_on": [],
						"id":         "projects/modular-scout-345114/locations/us-central1/caPools/my-ca-pool",
						"tainted":    false,
					},
				},
			},
			"tls_cert_request": {
				"example": {
					0: {
						"attr": {
							"cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIICeDCCAWACAQAwMzEbMBkGA1UEChMSQUNNRSBFeGFtcGxlcywgSW5jMRQwEgYD\nVQQDEwtleGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAKwZ6KUD/jcC8uwYJvSzIvkQSsN1UZ19Fwdu/jHCbg5ReeTbpaNoSp02J8h1Py38\nbT7v1JAt6FHc7ljh98TBsci7PX2nKUT129BfatwyQH3hbdBXDx6+g5bhADKAuTml\ncIM+0r8QnaCNV45w/lDwiKfQpO8YkQRY5dNRa2KafYbdTLuupq36fsAuaw4eQQIv\nD402WWDJWAFJhxi+SHUvf7GahppSjjSvBl/9b6oCs9vvb1D9+cilotVgUwpYFiG5\nlthsH3dM3LHxFzSA4XQPs0uGVJRrKHJ1VtwpKwvRlDMdel9AIdkWT/w8EKlRt2wf\nTO/k7GVxy8+0xseP8uLx+UMCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQCUXZ2V\n0nk2J2y/oxk69Fxm6U4m/IN+n3P+YU/kLmpVX3XwLUB5AAzzaxhBzjMOMfNWP/5l\nKJbc52tlRurXuLuVrSgqBayAoOpcm/nqfgmM3OsyJirVBSRECzozGNKWaTQfu+da\nbTHkOvtlsHgzUkGFwQ/S6a8L9oFOSZ7P05STk7qfO9xEANimu/wtj3F5QJ/B9t/5\nSqr+d9gEqh/Np1CMCdmUdzMuOduc4sUYHo4mN3jwjVn8PVB21GUe8UHCdVg93w+Q\nrBQECIp0r3cu1nm2EvOMe1ziP1oYCLDi0o7VTdmKwcnHOMZmnRVyKe5YZdLUGfam\nqJZXJXS/d74pMjYt\n-----END CERTIFICATE REQUEST-----\n",
							"dns_names":        null,
							"id":               "2545610ce8dd0f0ccf8d898b1fb8fa748072e58e",
							"ip_addresses":     null,
							"key_algorithm":    "RSA",
							"private_key_pem":  "REDACTED_SENSITIVE",
							"subject": [
								{
									"common_name":         "example.com",
									"country":             "",
									"locality":            "",
									"organization":        "ACME Examples, Inc",
									"organizational_unit": "",
									"postal_code":         "",
									"province":            "",
									"serial_number":       "",
									"street_address":      [],
								},
							],
							"uris": null,
						},
						"depends_on": [
							"tls_private_key.example",
						],
						"id":      "2545610ce8dd0f0ccf8d898b1fb8fa748072e58e",
						"tainted": false,
					},
				},
			},
			"tls_private_key": {
				"example": {
					0: {
						"attr": {
							"algorithm":   "RSA",
							"ecdsa_curve": "P224",
							"id":          "34700adea1734b395f01fec37e52093aaed49f86",
							"private_key_openssh":           "REDACTED_SENSITIVE",
							"private_key_pem":               "REDACTED_SENSITIVE",
							"public_key_fingerprint_md5":    "43:44:11:eb:7b:74:0b:1a:bf:eb:71:44:f1:00:dc:b5",
							"public_key_fingerprint_sha256": "SHA256:73BzJu+aQTi4sVkun6gD3Rc47dinJ3ed16K2AUak8sQ",
							"public_key_openssh":            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsGeilA/43AvLsGCb0syL5EErDdVGdfRcHbv4xwm4OUXnk26WjaEqdNifIdT8t/G0+79SQLehR3O5Y4ffEwbHIuz19pylE9dvQX2rcMkB94W3QVw8evoOW4QAygLk5pXCDPtK/EJ2gjVeOcP5Q8Iin0KTvGJEEWOXTUWtimn2G3Uy7rqat+n7ALmsOHkECLw+NNllgyVgBSYcYvkh1L3+xmoaaUo40rwZf/W+qArPb729Q/fnIpaLVYFMKWBYhuZbYbB93TNyx8Rc0gOF0D7NLhlSUayhydVbcKSsL0ZQzHXpfQCHZFk/8PBCpUbdsH0zv5OxlccvPtMbHj/Li8flD\n",
							"public_key_pem":                "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArBnopQP+NwLy7Bgm9LMi\n+RBKw3VRnX0XB27+McJuDlF55Nulo2hKnTYnyHU/LfxtPu/UkC3oUdzuWOH3xMGx\nyLs9facpRPXb0F9q3DJAfeFt0FcPHr6DluEAMoC5OaVwgz7SvxCdoI1XjnD+UPCI\np9Ck7xiRBFjl01FrYpp9ht1Mu66mrfp+wC5rDh5BAi8PjTZZYMlYAUmHGL5IdS9/\nsZqGmlKONK8GX/1vqgKz2+9vUP35yKWi1WBTClgWIbmW2Gwfd0zcsfEXNIDhdA+z\nS4ZUlGsocnVW3CkrC9GUMx16X0Ah2RZP/DwQqVG3bB9M7+TsZXHLz7TGx4/y4vH5\nQwIDAQAB\n-----END PUBLIC KEY-----\n",
							"rsa_bits":                      2048,
						},
						"depends_on": [],
						"id":         "34700adea1734b395f01fec37e52093aaed49f86",
						"tainted":    false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "1.2.3"

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
